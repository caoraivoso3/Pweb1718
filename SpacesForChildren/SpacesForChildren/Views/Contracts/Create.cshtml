@model SpacesForChildren.Models.Contract
@{
    ViewBag.Title = "Create";
}
<h2>Criar Contrato</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.InitialDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InitialDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InitialDate, "", new { @class = "text-danger" })
            </div>
        </div>
        @*
            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        *@
        @if (User.IsInRole("Pai") || User.IsInRole("Administrador")) {
            <div class="form-group">
                @Html.LabelFor(model => model.Approvation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.DropDownListFor(model => model.Approvation, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Approvation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        @if (User.IsInRole("Instituição") || User.IsInRole("Administrador")) {

            <div class="form-group" style="display:none">
                @Html.LabelFor(model => model.ParentId, "Pai", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("ParentId", null, htmlAttributes: new {
                        @class = "form-control",
                        @display = "none",
                    })
                    @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                </div>
            </div>

            /*
            <div class="form-group">
                @Html.LabelFor(model => model.ParentId, "Pai", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ParentId", null, htmlAttributes: new {
                        @id = "dropDownParent",
                        onchange = "UpdateGetChilds()",
                        @class = "form-control"
                    })
                    @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                </div>
            </div>
            <script>
                function UpdateGetChilds() {
                    var idParent = $("#dropDownParent").val();
                    //alert('Drop Down Parent: ' + idParent.val()); //for check
                    $.ajax({
                        url: '@(Url.Action("GetChilds","Contracts"))',
                        type: 'POST',
                        datatype: 'application/json',
                        contentType: 'application/json',
                        //data: JSON.stringify({
                        //    idParent : +idParent
                        //}),
                        success: function () {
                            alert('request sent');

                        }, error: function () {
                            alert('Some error occurred');
                        }

                    });
                }
            </script>
            */
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ChildId, "Criança", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ChildId", null, htmlAttributes: new {
                    @id = "dropDownChild",
                    @class = "form-control"
                })
                @Html.ValidationMessageFor(model => model.ChildId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Pai") || User.IsInRole("Administrador")) {
            <div class="form-group">
                @Html.LabelFor(model => model.ReviewId, "Avaliação", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ReviewId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ReviewId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceId, "Serviços", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Voltar", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
