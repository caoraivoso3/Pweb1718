@model SpacesForChildren.Models.RegisterViewModel
@{
    ViewBag.Title = "Registar";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
    @Html.AntiForgeryToken()
    <h4>Criar Nova Conta de Utilizador</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NIF, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.NIF, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Perfil", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("Profile", null, null, new { @class = "form-control" , @onchange = "roleFunction(this.value)" })
        </div>
    </div>

    
    <div id="institution-register-forms">
        <div class="form-group">
            @Html.LabelFor(m => m.Type, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
            </div>
        </div>
    </div>


    <div id="parent-register-forms" style="display: none">
        <div class="form-group">
            @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div class="form-group" style="display: none">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Registar" />
        </div>
    </div>

    <script>

        function roleFunction(role) {
            if (role === "Instituição")
                institutionRoleFunction();
            else if(role === "Pai")
                parentRoleFunction();

        }

        function parentRoleFunction() {
            var parentFields = document.getElementById("parent-register-forms");
            var institutionFields = document.getElementById("institution-register-forms");
            parentFields.style.display = "block";
            institutionFields.style.display = "none";
        }

        function institutionRoleFunction() {
            var parentFields = document.getElementById("parent-register-forms");
            var institutionFields = document.getElementById("institution-register-forms");
            parentFields.style.display = "none";
            institutionFields.style.display = "block";
        }
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
